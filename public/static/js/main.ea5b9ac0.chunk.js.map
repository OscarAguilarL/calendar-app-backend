{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initState","checking","initialState","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","removeItem","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","endDate","setEndDate","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea5b9ac0.chunk.js","sourcesContent":["export const types = {\r\n    /* UI */\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    /* Calendar Events */\r\n    eventSetActive: '[events] Set new',\r\n    eventsLogout: '[events] Logout clean',\r\n    eventStartAddNew: '[events] Start add new',\r\n    eventAddNew: '[events] Add new',\r\n    eventClearActive: '[events] Clear active event',\r\n    eventUpdated: '[events] Event updated',\r\n    eventDeleted: '[events] Event deleted',\r\n    eventLoaded: '[events] Event loaded',\r\n\r\n    /* Auth Events */\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authLogout: '[auth] Logout',\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n};\r\n\r\nexport const authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            };\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Oscar',\r\n//     },\r\n// },\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload],\r\n            };\r\n\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            };\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((e) =>\r\n                    e.id === action.payload.id ? action.payload : e\r\n                ),\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    (e) => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null,\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload],\r\n            };\r\n\r\n        case types.eventsLogout:\r\n            return {\r\n                ...initialState,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== 'undefined' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((e) => ({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate(),\r\n    }));\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name,\r\n                };\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActive,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(\r\n                `events/${event.id}`,\r\n                event,\r\n                'PUT'\r\n            );\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.events);\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventsLogout });\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken(\r\n            'auth/new',\r\n            { email, password, name },\r\n            'POST'\r\n        );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('token-init-date');\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout,\r\n});\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'oscar2@gmail.com',\r\n        lPassword: '12asdsd323',\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Oscar',\r\n        rEmail: 'oscarag@gmail.com',\r\n        rPassword1: '1234567',\r\n        rPassword2: '1234567',\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire(\r\n                'Error',\r\n                'Las contraseñas deben ser iguales',\r\n                'warning'\r\n            );\r\n        } else {\r\n            dispatch(startRegister(rEmail, rPassword1, rName));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nimport './Navbar.css';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector((state) => state.auth);\r\n\r\n    const handleLogin = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger btn-salir\"\r\n                onClick={handleLogin}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = (e) => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = (e) => ({ type: types.uiCloseModal });\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    eventClearActiveEvent,\r\n    eventStartAddNew,\r\n    eventStartUpdate,\r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#modal');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOneHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOneHour.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector((state) => state.ui);\r\n    const { activeEvent } = useSelector((state) => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [endDate, setEndDate] = useState(nowPlusOneHour.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [setFormValues, activeEvent]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleStartChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        });\r\n    };\r\n\r\n    const handleEndChange = (e) => {\r\n        setEndDate(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        });\r\n    };\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire(\r\n                'Error',\r\n                'La fecha fin debe ser mayor a la fecha de inicio',\r\n                'error'\r\n            );\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate({ ...formValues }));\r\n        } else {\r\n            dispatch(eventStartAddNew({ ...formValues }));\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? activeEvent.title : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleFormSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndChange}\r\n                        value={endDate}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${\r\n                            !titleValid && 'is-invalid'\r\n                        }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Una descripción corta\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Información adicional\r\n                    </small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClick}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport {\r\n    eventClearActiveEvent,\r\n    eventSetActive,\r\n    eventStartLoading,\r\n} from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { useSelector } from 'react-redux';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { events, activeEvent } = useSelector((state) => state.calendar);\r\n    const { uid } = useSelector((state) => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem('lastView') || 'month'\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    const onSelect = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660',\r\n            borderRadius: 0,\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        };\r\n\r\n        return {\r\n            style,\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelect}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent,\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {activeEvent && <DeleteEventFab />}\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                !isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5>Espere...</h5>;\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        isAuthenticated={!!uid}\r\n                        component={LoginScreen}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}